///*
//题目描述
//某市调查城镇交通状况，得到现有城镇道路统计表。表中列出了每条道路直接连通的城镇。
//市政府 "村村通工程" 的目标是使全市任何两个城镇间都可以实现交通
//（但不一定有直接的道路相连，只要相互之间可达即可）。请你计算出最少还需要建设多少条道路？
//
//输入格式
//输入包含若干组测试测试数据，每组测试数据的第一行给出两个用空格隔开的正整数，
//分别是城镇数目 n 和道路数目 m ；随后的 m 行对应 m 条道路，每行给出一对用空格隔开的正整数，
//分别是该条道路直接相连的两个城镇的编号。简单起见，城镇从 1 到 n 编号。
//
//注意：两个城市间可以有多条道路相通。
//
//输出格式
//对于每组数据，对应一行一个整数。表示最少还需要建设的道路数目。
//
//输入输出样例
//输入 1
//4 2
//1 3
//4 3
//
//3 3
//1 2
//1 3
//2 3
//
//5 2
//1 2
//3 5
//
//999 0
//0
//输出 1
//1
//0
//2
//998
//
//*/
//
//#include <iostream>
//using namespace std;
//
//int n, m;
//int father[1005];
//
//int find(int x)
//{
//	if (x == father[x]) return x;
//
//	return father[x] = find(father[x]);
//}
//
//void join(int x, int y)
//{
//	int fx = find(x);
//	int fy = find(y);
//	if (fx != fy) father[fx] = fy;
//}
//
//int main()
//{
//	while (cin >> n >> m, n)
//	{
//		for (int i = 1; i <= n; ++i) father[i] = i;
//
//		for (int i = 1; i <= m; ++i)
//		{
//			int a, b;
//			cin >> a >> b;
//			join(a, b);
//		}
//
//		int ans = 0;
//		for (int i = 1; i <= n; ++i)
//		{
//			if (father[i] == i) ans++;
//		}
//		cout << ans - 1 << endl;
//	}
//	return 0;
//}