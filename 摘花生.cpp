///*
//小红来到一片有网络状道路的矩形花生地，从西北角进去，东南角出来。
//地里每个道路的交叉点上都种植一株花生苗，上面有若干颗花生，
//经过一株花生苗就能摘走它上面所有的花生。小红只能向东或向南走，不能向西以后向北走。
//问，小红最多能摘到多少颗花生？
//输入：
//第一行是一个整数t，代表一共有多少组数据。
//接下来是t组数据，每组数据的第一行是两个整数，分别代表花生苗的行数和列数，
//每组数据的接下来R行数据，从北向南依次描述每一行花生苗的情况。
//每行数据有C个整数，按从西向东的顺序描述了该行每株花生苗上的花生数目。
//
//输出：
//对每组输入数据输出一行，内容为小红能摘到的最多的花生颗数。
//
//输入示例：
//2
//2 2
//1 1
//3 4
//2 3
//2 3 4
//1 6 5
//
//输出示例：
//8
//16
//*/
//
//#include<iostream>
//using namespace std;
//long t;  //t组数据
//long n, m;   //n行m列
//long a[101][101];   
//long dp[101][101];  //dp[i][j]表示从起始点走到底i行第j列所能摘到的最多花生
//
//int main()
//{
//	cin >> t;
//	while (t--)
//	{
//		cin >> n >> m;
//		for (long i = 1; i <= n; ++i)
//			for (long j = 1; j <= m; ++j)
//				cin >> a[i][j];
//
//		dp[1][1] = a[1][1];
//		for (long i = 2; i <= n; ++i) dp[i][1] = dp[i - 1][1] + a[i][1];
//		for (long j = 2; j <= m; ++j) dp[1][j] = dp[1][j - 1] + a[1][j];
//		for (long i = 2; i <= n; ++i)
//			for (long j = 2; j <= m; ++j)
//				dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]) + a[i][j];
//
//		cout << dp[n][m] << endl;
//	}//while
//	return 0;
//}