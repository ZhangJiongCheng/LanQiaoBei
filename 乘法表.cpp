/*
问题描述
九九乘法表是学习乘法时必须要掌握的。在不同进制数下，需要不同的乘法表。 例如，四进制下的乘法表如下所示：

1*1=1
2*1=2 2*2=10
3*1=3 3*2=12 3*3=21
请注意，乘法表中两个数相乘的顺序必须为样例中所示的顺序，不能随意交换两个乘数。

给定 P，请输出 P 进制下的乘法表。

输入格式
输入一个整数 P。

输出格式
输出 P 进制下的乘法表。P 进制中大于等于 10 的数字用大写字母 A、B、C、··· 表示。

样例输入
4

样例输出
1*1=1
2*1=2 2*2=10
3*1=3 3*2=12 3*3=21

样例输入
8

样例输出
1*1=1
2*1=2 2*2=4
3*1=3 3*2=6 3*3=11
4*1=4 4*2=10 4*3=14 4*4=20
5*1=5 5*2=12 5*3=17 5*4=24 5*5=31
6*1=6 6*2=14 6*3=22 6*4=30 6*5=36 6*6=44
7*1=7 7*2=16 7*3=25 7*4=34 7*5=43 7*6=52 7*7=61
*/

#include<iostream>
#include<algorithm>
#include<string>
using namespace std;

long p;
char w[36];

string change(long data) //将十进制的data转换成p进制的数
{
	string s;
	while (data)
	{
		s += w[data % p];
		data /= p;
	}
	reverse(s.begin(), s.end());
	return s;
}

int main()
{
	cin >> p;
	long i, j;
	for (i = 0; i < 10; ++i) w[i] = char(i - 0 + '0');
	for (; i < 36; ++i) w[i] = char(i - 10 + 'A');

	for (i = 1; i < p; ++i)
	{
		for (j = 1; j <= i; ++j)
			cout << w[i] << "*" << w[j] << "=" << change(i * j) << " ";
		cout << endl;
	}
	return 0;
}