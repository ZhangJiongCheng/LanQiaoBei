///*
//【问题描述】
//
//助教小明给期末测验出了 n 道算法题目。他希望在即将到来的期末测验试卷中使用其中 k 道题目。
//
//每道算法题目都有一个难度等级。如果一次测验中的所有 k 道题目都有不同的难度等级，那么这次期末测试就是有区分度的。
//
//计算小明可以设计多少种有区分度的期末试卷。
//
//注：
//
//两份测验试卷当且仅当一份试卷中存在某一题目 p，而另一份试卷中不存在这个题 p，这两份试卷才有区别。
//
//输出结果对998,244,353取余。
//
//【输入形式】
//
//输入第一行包括两个用空格分隔开的整数 n 和 k,
//
//输入第二行 n 个用空格分开隔的整数li，表示不同题目的难度。
//
//【输出形式】
//
// 一个整数，表示可设计的有区分度的期末试卷数目。结果对998,244,353取余
//
//【样例输入】
//5 2
//1 2 3 4 5
//【样例输出】
//10
//*/
//
///*
//f[i][j]=f[i-1][j-1]+f[i-1][j]
//*/
//
//#include <iostream>
//#include<algorithm>
//using namespace std;
//
//
//const int M = 998244353;
//const int N = 1005;
//int n, m;
//int a[N];
//int f[N][N];  //f[i][j]表示以a[i]结尾的长度为j的递增子序列的个数
//
//int main()
//{
//    cin >> n >> m;
//    for (int i = 1; i <= n; ++i)
//    {
//        cin >> a[i];
//        f[i][1] = 1;
//    }
//
//    sort(a + 1, a + n + 1);
//    for (int i = 1; i <= n; ++i)
//    {
//        for (int j = 1; j <= m; ++j)
//        {
//            for (int k = 1; k < i; ++k)
//            {
//                if (a[i] > a[k])
//                    f[i][j] = (f[i][j] + f[k][j - 1]) % M;
//            }
//        }
//   }
//
//    int ans = 0;
//    for (int i = 1; i <= n; ++i)
//        ans = (ans + f[i][m]) % M;
//    cout << ans << endl;
//
//    return 0;
//}